{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\Meet\\\\mearn\\\\p1\\\\client\\\\src\\\\components\\\\TableData.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableData = () => {\n  _s();\n  const sampleJSON = {\n    \"object\": {\n      \"name\": \"Pluralsight\",\n      \"number\": 1,\n      \"address\": \"India\",\n      \"website\": \"https://www.pluralsight.com/\"\n    }\n  };\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetch('/users').then(res => res.json()).then(data => setUsers(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl text-center my-10\",\n      children: \"Dynamic Data in Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: Object.keys(sampleJSON.object).map((key, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Key Name: \", key]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Value: \", sampleJSON.object[key]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 13\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 11\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: user.index\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(TableData, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = TableData;\nexport default TableData;\nvar _c;\n$RefreshReg$(_c, \"TableData\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","TableData","_s","sampleJSON","users","setUsers","fetch","then","res","json","data","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","object","map","key","i","user","index","name","_c","$RefreshReg$"],"sources":["D:/study/Meet/mearn/p1/client/src/components/TableData.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst TableData = () => {\r\n\r\n    const sampleJSON = {\r\n        \"object\": {\r\n          \"name\": \"Pluralsight\",\r\n          \"number\": 1,\r\n          \"address\": \"India\",\r\n          \"website\": \"https://www.pluralsight.com/\"\r\n        }\r\n      }\r\n      \r\n    const [users, setUsers] = useState([]);\r\n    useEffect(() => {\r\n        fetch('/users')\r\n            .then(res => res.json())\r\n            .then(data => setUsers(data))\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-4xl text-center my-10\">\r\n                Dynamic Data in Table\r\n            </h1>\r\n\r\n            <div>\r\n                <div className=\"overflow-x-auto\">\r\n                    <table className=\"table w-full\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                               \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n\r\n\r\n                    \r\n                        <div>\r\n      { Object.keys(sampleJSON.object).map((key, i) => (\r\n          <p key={i}>\r\n            <span>Key Name: {key}</span>\r\n            <span>Value: {sampleJSON.object[key]}</span>\r\n          </p>\r\n        ))\r\n      }\r\n    </div>\r\n                \r\n                       \r\n                        \r\n                            {\r\n                                users.map((user,) =>\r\n                                    <tr>\r\n                                        \r\n                                        <th>{user.index}</th>\r\n                                        <td>{user.name}</td>\r\n                                       \r\n                                    </tr>\r\n                                )\r\n                            }\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableData;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}