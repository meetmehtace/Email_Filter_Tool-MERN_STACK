{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\Meet\\\\mearn\\\\p1\\\\client\\\\src\\\\components\\\\UploadCsv.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadCsv = () => {\n  function uploadFile(files) {\n    var formData = new FormData();\n    files.map((file, index) => {\n      formData.append(`file${index}`, file);\n    });\n    fetch('/csv', {\n      // content-type header should not be specified!\n      method: 'POST',\n      body: formData\n    }).then(response => response.json()).then(success => {\n      // Do something with the successful response\n    }).catch(error => console.log(error));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = UploadCsv;\nexport default UploadCsv;\nvar _c;\n$RefreshReg$(_c, \"UploadCsv\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","UploadCsv","uploadFile","files","formData","FormData","map","file","index","append","fetch","method","body","then","response","json","success","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/study/Meet/mearn/p1/client/src/components/UploadCsv.js"],"sourcesContent":["import React,{} from 'react'\r\n\r\nconst UploadCsv = () => {\r\n\r\n  function uploadFile(files) {\r\n  \r\n    var formData = new FormData();\r\n    \r\n    files.map((file, index) => {\r\n      formData.append(`file${index}`, file);\r\n    });\r\n    \r\n    fetch('/csv', {\r\n      // content-type header should not be specified!\r\n      method: 'POST',\r\n      body: formData,\r\n    })\r\n      .then(response => response.json())\r\n      .then(success => {\r\n        // Do something with the successful response\r\n      })\r\n      .catch(error => console.log(error)\r\n    );\r\n  }\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <form method='post' ></form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UploadCsv\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAS,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAEtB,SAASC,UAAUA,CAACC,KAAK,EAAE;IAEzB,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAE7BF,KAAK,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACzBJ,QAAQ,CAACK,MAAM,CAAE,OAAMD,KAAM,EAAC,EAAED,IAAI,CAAC;IACvC,CAAC,CAAC;IAEFG,KAAK,CAAC,MAAM,EAAE;MACZ;MACAC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAER;IACR,CAAC,CAAC,CACCS,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,OAAO,IAAI;MACf;IAAA,CACD,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CACnC;EACH;EAGA,oBACElB,OAAA;IAAAqB,QAAA,eACErB,OAAA;MAAMW,MAAM,EAAC;IAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAS;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACxB;AAEV,CAAC;AAAAC,EAAA,GA7BKzB,SAAS;AA+Bf,eAAeA,SAAS;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}